# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Test application

on:
  pull_request:
    branches: [ qa ]
  push:
    branches: [ qa ]  

jobs:
  build-java:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: finish
    strategy:
      matrix:
        java: [1.8, 11]
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - run: unset _JAVA_OPTIONS
    - name: Setting up OC
      run: |
          sudo mount --make-rshared /
          wget -nv https://github.com/openshift/origin/releases/download/v3.11.0/openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz
          tar -xvf openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz
          cd openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit
          export PATH=`pwd`:$PATH
          cd ..
          sudo mv ../scripts/daemon.json /etc/docker/
          sudo systemctl restart docker
          oc cluster up
    - name: Test
      run: TEST_RESULT=$(chmod +x ../scripts/travisTest.sh && ../scripts/travisTest.sh);
    - name: Post Test
      if: always()
      run: |
          docker images
          if [[ "$TEST_RESULT" == "0" ]]; then RESULT="passed"; else RESULT="failed"; fi
          echo -e "\033[1;34m result:\033[0m\033[1;36m $RESULT \033[0m \n"
